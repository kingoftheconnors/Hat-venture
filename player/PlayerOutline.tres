[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform bool white;
uniform float width : hint_range(0.0, 16.0);
uniform vec4 outline_color : hint_color;

// Which color you want to change
uniform vec4 game_white : hint_color;
uniform vec4 game_light : hint_color;
uniform vec4 game_dark : hint_color;

uniform vec4 palette_white : hint_color;
uniform vec4 palette_light : hint_color;
uniform vec4 palette_dark : hint_color;

uniform int brightness_level;
uniform float precision;

int get_level_from_game_color(vec3 color) {
	vec4 original_colors[3] = vec4[3] (game_dark, game_light, game_white);
	for (int i = 0; i < 3; i ++) {
		if (distance(color, original_colors[i].rgb) <= precision){
			return i;
		}
	}
	return -1;
}

vec4 get_palette_color(int level) {
	vec4 replace_colors[3] = vec4[3] (palette_dark, palette_light, palette_white);
	if (level > replace_colors.length()-1)
		level = replace_colors.length()-1;
	return replace_colors[level];
}

void fragment()
{
	vec4 color = texture(TEXTURE, UV);
	
	if (white)
	{
		vec2 size = vec2(width) / vec2(textureSize(TEXTURE, 0));
		float alpha = 0f;
		alpha += 1.0 - texture(TEXTURE, UV + vec2(0.0, -size.y)).a;
		alpha += 1.0 - texture(TEXTURE, UV + vec2(size.x, 0.0)).a;
		alpha += 1.0 - texture(TEXTURE, UV + vec2(0.0, size.y)).a;
		alpha += 1.0 - texture(TEXTURE, UV + vec2(-size.x, 0.0)).a;
		
		if (color.a > 0f && alpha > 0f)
			COLOR = vec4(outline_color.rgb, clamp(alpha, 0.0, 1.0));
		else if (alpha > 0f)
			COLOR = vec4(1, 1, 1, color.a);
	}
	else
	{
		// Default color situation
		vec4 c = textureLod(TEXTURE, UV, 0.0);
		int level = get_level_from_game_color(c.rgb);
		if (level >= 0) {
			COLOR.rgb = get_palette_color(level+brightness_level).rgb;
			COLOR.a = c.a;
		}
		else
			COLOR = c;
	}
}"

[resource]
shader = SubResource( 1 )
shader_param/white = false
shader_param/width = 1.0
shader_param/outline_color = Color( 0.564706, 0.564706, 0.564706, 1 )
shader_param/game_white = Color( 1, 1, 1, 1 )
shader_param/game_light = Color( 0.67451, 0.682353, 0.67451, 1 )
shader_param/game_dark = Color( 0.345098, 0.352941, 0.345098, 1 )
shader_param/palette_white = Color( 1, 1, 1, 1 )
shader_param/palette_light = Color( 0.67451, 0.682353, 0.67451, 1 )
shader_param/palette_dark = Color( 0.345098, 0.352941, 0.345098, 1 )
shader_param/brightness_level = null
shader_param/precision = 0.1
